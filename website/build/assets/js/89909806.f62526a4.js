"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1585],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>h});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),d=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},u=function(t){var e=d(t.components);return n.createElement(s.Provider,{value:e},t.children)},p="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),p=d(a),m=r,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||i;return a?n.createElement(h,o(o({ref:e},u),{},{components:a})):n.createElement(h,o({ref:e},u))}));function h(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[p]="string"==typeof t?t:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8529:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],l={id:"tutorial-update-data",title:"Tutorial: Updating existing data",sidebar_label:"Updating existing data"},s=void 0,d={unversionedId:"tutorials/tutorial-update-data",id:"tutorials/tutorial-update-data",title:"Tutorial: Updating existing data",description:"\x3c!--",source:"@site/../docs/tutorials/tutorial-update-data.md",sourceDirName:"tutorials",slug:"/tutorials/tutorial-update-data",permalink:"/docs/tutorials/tutorial-update-data",draft:!1,editUrl:"https://github.com/apache/druid/edit/master/docs/../docs/tutorials/tutorial-update-data.md",tags:[],version:"current",lastUpdatedBy:"sthetland",lastUpdatedAt:1608241063,formattedLastUpdatedAt:"Dec 17, 2020",frontMatter:{id:"tutorial-update-data",title:"Tutorial: Updating existing data",sidebar_label:"Updating existing data"},sidebar:"docs",previous:{title:"Configuring data retention",permalink:"/docs/tutorials/tutorial-retention"},next:{title:"Compacting segments",permalink:"/docs/tutorials/tutorial-compaction"}},u={},p=[{value:"Overwrite",id:"overwrite",level:2},{value:"Load initial data",id:"load-initial-data",level:3},{value:"Overwrite the initial data",id:"overwrite-the-initial-data",level:3},{value:"Combine old data with new data and overwrite",id:"combine-old-data-with-new-data-and-overwrite",level:2},{value:"Append to the data",id:"append-to-the-data",level:2}],c={toc:p};function m(t){var e=t.components,a=(0,r.Z)(t,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This tutorial demonstrates how to update existing data, showing both overwrites and appends."),(0,i.kt)("p",null,"For this tutorial, we'll assume you've already downloaded Apache Druid as described in\nthe ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/"},"single-machine quickstart")," and have it running on your local machine."),(0,i.kt)("p",null,"It will also be helpful to have finished ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/tutorial-batch"},"Tutorial: Loading a file"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/tutorial-query"},"Tutorial: Querying data"),", and ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/tutorial-rollup"},"Tutorial: Rollup"),"."),(0,i.kt)("h2",{id:"overwrite"},"Overwrite"),(0,i.kt)("p",null,"This section of the tutorial will cover how to overwrite an existing interval of data."),(0,i.kt)("h3",{id:"load-initial-data"},"Load initial data"),(0,i.kt)("p",null,"Let's load an initial data set which we will overwrite and append to."),(0,i.kt)("p",null,"The spec we'll use for this tutorial is located at ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-init-index.json"),". This spec creates a datasource called ",(0,i.kt)("inlineCode",{parentName:"p"},"updates-tutorial")," from the ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-data.json")," input file."),(0,i.kt)("p",null,"Let's submit that task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bin/post-index-task --file quickstart/tutorial/updates-init-index.json --url http://localhost:8081\n")),(0,i.kt)("p",null,'We have three initial rows containing an "animal" dimension and "number" metric:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'dsql> select * from "updates-tutorial";\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 __time                   \u2502 animal   \u2502 count \u2502 number \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2018-01-01T01:01:00.000Z \u2502 tiger    \u2502     1 \u2502    100 \u2502\n\u2502 2018-01-01T03:01:00.000Z \u2502 aardvark \u2502     1 \u2502     42 \u2502\n\u2502 2018-01-01T03:01:00.000Z \u2502 giraffe  \u2502     1 \u2502  14124 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nRetrieved 3 rows in 1.42s.\n')),(0,i.kt)("h3",{id:"overwrite-the-initial-data"},"Overwrite the initial data"),(0,i.kt)("p",null,"To overwrite this data, we can submit another task for the same interval, but with different input data."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-overwrite-index.json")," spec will perform an overwrite on the ",(0,i.kt)("inlineCode",{parentName:"p"},"updates-tutorial")," datasource."),(0,i.kt)("p",null,"Note that this task reads input from ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-data2.json"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"appendToExisting")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," (indicating this is an overwrite)."),(0,i.kt)("p",null,"Let's submit that task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bin/post-index-task --file quickstart/tutorial/updates-overwrite-index.json --url http://localhost:8081\n")),(0,i.kt)("p",null,'When Druid finishes loading the new segment from this overwrite task, the "tiger" row now has the value "lion", the "aardvark" row has a different number, and the "giraffe" row has been replaced. It may take a couple of minutes for the changes to take effect:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'dsql> select * from "updates-tutorial";\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 __time                   \u2502 animal   \u2502 count \u2502 number \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2018-01-01T01:01:00.000Z \u2502 lion     \u2502     1 \u2502    100 \u2502\n\u2502 2018-01-01T03:01:00.000Z \u2502 aardvark \u2502     1 \u2502   9999 \u2502\n\u2502 2018-01-01T04:01:00.000Z \u2502 bear     \u2502     1 \u2502    111 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nRetrieved 3 rows in 0.02s.\n')),(0,i.kt)("h2",{id:"combine-old-data-with-new-data-and-overwrite"},"Combine old data with new data and overwrite"),(0,i.kt)("p",null,"Let's try appending some new data to the ",(0,i.kt)("inlineCode",{parentName:"p"},"updates-tutorial")," datasource now. We will add the data from ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-data3.json"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-append-index.json")," task spec has been configured to read from the existing ",(0,i.kt)("inlineCode",{parentName:"p"},"updates-tutorial")," datasource and the ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-data3.json")," file. The task will combine data from the two input sources, and then overwrite the original data with the new combined data."),(0,i.kt)("p",null,"Let's submit that task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bin/post-index-task --file quickstart/tutorial/updates-append-index.json --url http://localhost:8081\n")),(0,i.kt)("p",null,'When Druid finishes loading the new segment from this overwrite task, the new rows will have been added to the datasource. Note that roll-up occurred for the "lion" row:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'dsql> select * from "updates-tutorial";\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 __time                   \u2502 animal   \u2502 count \u2502 number \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2018-01-01T01:01:00.000Z \u2502 lion     \u2502     2 \u2502    400 \u2502\n\u2502 2018-01-01T03:01:00.000Z \u2502 aardvark \u2502     1 \u2502   9999 \u2502\n\u2502 2018-01-01T04:01:00.000Z \u2502 bear     \u2502     1 \u2502    111 \u2502\n\u2502 2018-01-01T05:01:00.000Z \u2502 mongoose \u2502     1 \u2502    737 \u2502\n\u2502 2018-01-01T06:01:00.000Z \u2502 snake    \u2502     1 \u2502   1234 \u2502\n\u2502 2018-01-01T07:01:00.000Z \u2502 octopus  \u2502     1 \u2502    115 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nRetrieved 6 rows in 0.02s.\n')),(0,i.kt)("h2",{id:"append-to-the-data"},"Append to the data"),(0,i.kt)("p",null,"Let's try another way of appending data."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-append-index2.json")," task spec reads input from ",(0,i.kt)("inlineCode",{parentName:"p"},"quickstart/tutorial/updates-data4.json")," and will append its data to the ",(0,i.kt)("inlineCode",{parentName:"p"},"updates-tutorial")," datasource. Note that ",(0,i.kt)("inlineCode",{parentName:"p"},"appendToExisting")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," in this spec."),(0,i.kt)("p",null,"Let's submit that task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bin/post-index-task --file quickstart/tutorial/updates-append-index2.json --url http://localhost:8081\n")),(0,i.kt)("p",null,'When the new data is loaded, we can see two additional rows after "octopus". Note that the new "bear" row with number 222 has not been rolled up with the existing bear-111 row, because the new data is held in a separate segment.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'dsql> select * from "updates-tutorial";\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 __time                   \u2502 animal   \u2502 count \u2502 number \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2018-01-01T01:01:00.000Z \u2502 lion     \u2502     2 \u2502    400 \u2502\n\u2502 2018-01-01T03:01:00.000Z \u2502 aardvark \u2502     1 \u2502   9999 \u2502\n\u2502 2018-01-01T04:01:00.000Z \u2502 bear     \u2502     1 \u2502    111 \u2502\n\u2502 2018-01-01T05:01:00.000Z \u2502 mongoose \u2502     1 \u2502    737 \u2502\n\u2502 2018-01-01T06:01:00.000Z \u2502 snake    \u2502     1 \u2502   1234 \u2502\n\u2502 2018-01-01T07:01:00.000Z \u2502 octopus  \u2502     1 \u2502    115 \u2502\n\u2502 2018-01-01T04:01:00.000Z \u2502 bear     \u2502     1 \u2502    222 \u2502\n\u2502 2018-01-01T09:01:00.000Z \u2502 falcon   \u2502     1 \u2502   1241 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nRetrieved 8 rows in 0.02s.\n\n')),(0,i.kt)("p",null,"If we run a GroupBy query instead of a ",(0,i.kt)("inlineCode",{parentName:"p"},"select *"),', we can see that the "bear" rows will group together at query time:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'dsql> select __time, animal, SUM("count"), SUM("number") from "updates-tutorial" group by __time, animal;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 __time                   \u2502 animal   \u2502 EXPR$2 \u2502 EXPR$3 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2018-01-01T01:01:00.000Z \u2502 lion     \u2502      2 \u2502    400 \u2502\n\u2502 2018-01-01T03:01:00.000Z \u2502 aardvark \u2502      1 \u2502   9999 \u2502\n\u2502 2018-01-01T04:01:00.000Z \u2502 bear     \u2502      2 \u2502    333 \u2502\n\u2502 2018-01-01T05:01:00.000Z \u2502 mongoose \u2502      1 \u2502    737 \u2502\n\u2502 2018-01-01T06:01:00.000Z \u2502 snake    \u2502      1 \u2502   1234 \u2502\n\u2502 2018-01-01T07:01:00.000Z \u2502 octopus  \u2502      1 \u2502    115 \u2502\n\u2502 2018-01-01T09:01:00.000Z \u2502 falcon   \u2502      1 \u2502   1241 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nRetrieved 7 rows in 0.23s.\n')))}m.isMDXComponent=!0}}]);